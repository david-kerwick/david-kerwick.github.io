{"data":{"site":{"siteMetadata":{"title":"Random Stuff About Stuff","author":"David Kerwick"}},"markdownRemark":{"id":"3721389d-ca43-52b6-a3a6-11960d5a7edf","excerpt":"So following on from getting  one value from a sequence  what if you want to get alot of sequences in bulk.  So you could get them as and when you need them or…","html":"<p>So following on from getting <a href=\"../2015-01-19-getting-oracle-sequence-in-spring\">one value from a sequence</a> what if you want to get alot of sequences in bulk.  So you could get them as and when you need them or you could loop the number of times to need and call the OracleSequenceMaxValueIncrementer each time.  </p>\n<p>Depending on the amount you need you may find this pretty slow as at the end of the day it’s a database call each time and there’s a cost to that that adds up.  </p>\n<p>So how to get them in bulk, it would be good if a sequence gave you a list if you asked for it but that doesn’t seem to be there yet.  So how about we cheat a bit  </p>\n<p>select message_id.nextval from dual connect by level &#x3C;= 50;  </p>\n<p>Will give you 50 values from the sequence.  Happy days, so leave it at that right… No?</p>\n<p>Well I have to say if I was asked to explain it fully in an interrogation room under a swinging lamp I would be hard pressed.</p>\n<p>It uses hierarchal queries but not strictly correctly, there’s none of the other supporting stuff like ‘start with’ and ‘prior’ so it causes it to act like a recursion.  So I assume really large values will blow it up but several thousand should be fine.</p>\n<p>And one database and network round trip = fast so don’t over think it :)</p>\n<p>An example class that does this would be  </p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">;</span>  \n\n<span class=\"token keyword\">import</span> javax<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>DataSource<span class=\"token punctuation\">;</span>  \n\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span>Logger<span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>Autowired<span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>namedparam<span class=\"token punctuation\">.</span>MapSqlParameterSource<span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>namedparam<span class=\"token punctuation\">.</span>NamedParameterJdbcTemplate<span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span>Repository<span class=\"token punctuation\">;</span>  \n\n<span class=\"token annotation punctuation\">@Repository</span>  \n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MessageIdSeqBulkImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MessageIdSeqBulk</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">transient</span> NamedParameterJdbcTemplate namedTemplate<span class=\"token punctuation\">;</span>  \n\n      <span class=\"token annotation punctuation\">@Autowired</span>  \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>DataSource dataSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>namedTemplate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NamedParameterJdbcTemplate</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n\n    <span class=\"token annotation punctuation\">@Override</span>  \n    <span class=\"token keyword\">public</span> List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">></span></span> <span class=\"token function\">getBulkMessageId</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        MapSqlParameterSource paramSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MapSqlParameterSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"count\"</span><span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>namedTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">queryForList</span><span class=\"token punctuation\">(</span>“select message_id<span class=\"token punctuation\">.</span>nextval from dual connect by level <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">:</span>count  \n”<span class=\"token punctuation\">,</span> paramSource<span class=\"token punctuation\">,</span> Integer<span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span>  </code></pre></div>","frontmatter":{"title":"Getting Oracle Sequences in bulk","date":"January 19, 2015"}}},"pageContext":{"slug":"/2015-01-19-getting-oracle-sequences-in-bulk/","previous":{"fields":{"slug":"/2015-01-19-getting-oracle-sequence-in-spring/"},"frontmatter":{"title":"Getting an Oracle Sequence in Spring"}},"next":{"fields":{"slug":"/2015-01-26-exclude-generated-files-from-sonar/"},"frontmatter":{"title":"Exclude Generated Files From Sonar Analysis"}}}}