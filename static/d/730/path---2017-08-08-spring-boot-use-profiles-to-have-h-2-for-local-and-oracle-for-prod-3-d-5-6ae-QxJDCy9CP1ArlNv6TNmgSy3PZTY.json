{"data":{"site":{"siteMetadata":{"title":"Random Stuff About Stuff","author":"David Kerwick"}},"markdownRemark":{"id":"081e29d6-fd4d-5c7c-925d-b252b6d31004","excerpt":"Having set up H2 in the previous posts which is handyish it needs to be set up in such a way that H2 only kicks in when developing locally and it should connect…","html":"<p>Having set up H2 in the previous posts which is handyish it needs to be set up in such a way that H2 only kicks in when developing locally and it should connect to a Oracle instance otherwise.</p>\n<p>So Spring has you pretty well covered here with the use of profiles.</p>\n<p>First up is to split your <code class=\"language-text\">application.properties</code> into your different profiles.</p>\n<p>In this case I’m going to go with three</p>\n<ul>\n<li><code class=\"language-text\">application.properties</code>       - settings shared across all</li>\n<li><code class=\"language-text\">application-local.properties</code> - settings for local (H2)</li>\n<li><code class=\"language-text\">application-prod.properties</code>  - settings for prod (Oracle)</li>\n</ul>\n<h2>application.properties</h2>\n<p>There’s not alot common at the moment but that will grow with the application.  For now</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">spring.jpa.hibernate.ddl-auto=none</code></pre></div>\n<h2>application-local.properties</h2>\n<p>Set up H2, I also find it useful to have debugging turned on for JDBC so you can see what’s gone wrong.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">logging.level.org.springframework.jdbc=DEBUG\nspring.h2.console.enabled=true\nspring.datasource.url=jdbc:h2:mem:testdb;MODE=Oracle;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE\nspring.datasource.platform=h2\nh2.tcp.enabled=true</code></pre></div>\n<h2>application-prod.properties</h2>\n<p>In prod all we need is the name of the datasource to use.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">spring.datasource.jndi-name=jdbc/myapp</code></pre></div>\n<p>From the previous post H2 server was started in the Application class, we also only want this to happen for the local profile so add <code class=\"language-text\">@Profile(&quot;local&quot;)</code> to that bean definition like so</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">@Bean(initMethod = &quot;start&quot;, destroyMethod = &quot;stop&quot;)\n@Profile(&quot;local&quot;)\npublic Server h2Server() {\n    Server h2Server;\n    try {\n        h2Server = Server.createTcpServer();\n    } catch (SQLException e) {\n        throw new RuntimeException(&quot;Failed to start H2 server: &quot;, e);\n    }\n    return h2Server;\n}</code></pre></div>","frontmatter":{"title":"Spring Boot - use profiles to have H2 for local and Oracle for prod","date":"August 08, 2017"}}},"pageContext":{"slug":"/2017-08-08-spring-boot-use-profiles-to-have-h2-for-local-and-oracle-for-prod/","previous":{"fields":{"slug":"/2017-08-08-access-a-h2-in-memory-database-from-other-clients/"},"frontmatter":{"title":"Access a H2 in memory database from other clients"}},"next":{"fields":{"slug":"/2017-08-08-colouring-spring-test-output-in-maven/"},"frontmatter":{"title":"Colouring Spring Test output in maven"}}}}