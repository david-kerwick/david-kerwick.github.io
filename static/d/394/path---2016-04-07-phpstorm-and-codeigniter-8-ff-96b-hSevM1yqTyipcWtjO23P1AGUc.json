{"data":{"site":{"siteMetadata":{"title":"Random Stuff About Stuff","author":"David Kerwick"}},"markdownRemark":{"id":"ff1a66c6-59cc-50d8-ac1b-47a9f8e6e50d","excerpt":"The legacy php project I’m looking into at the moment uses Codeigniter, version 2 as well.\nPopular in it’s day I think but I think other php frameworks have…","html":"<p>The legacy php project I’m looking into at the moment uses Codeigniter, version 2 as well.\nPopular in it’s day I think but I think other php frameworks have surpassed it now.</p>\n<p>Anyway I decided to look for an IDE to make sense of it all.\nPHPStorm kept coming up and it has a 30 day trial so decided I’d give that a go.</p>\n<p>Installation and project import are all standard so little point going through that.\nWhat I was surprised at is PHPStorm had no idea what it was looking at, undefined variables, unknown methods all over the place.  And there doesn’t seem to be anything in the plugin system to help either.</p>\n<p>So some googling and I found someone had decided to do something about it, several years ago… I guess when CI was still hanging on ;)</p>\n<p>The files are on github <a href=\"https://github.com/topdown/phpStorm-CC-Helpers\">here</a></p>\n<p>Which boils down to adding three files to the root of your project</p>\n<ul>\n<li>CI_phpStorm.php</li>\n<li>DB<em>active</em>rec.php</li>\n<li>my_models.php</li>\n</ul>\n<p>Then mark these files as plain text</p>\n<ul>\n<li>/system/core/Controller.php</li>\n<li>/system/core/Model.php</li>\n<li>/system/database/DB<em>active</em>rec.php</li>\n</ul>\n<p>So that works wonders, a good proportion of the errors go away.\nIt uses the doc to hint PHPStorm in the right direction for the global variables CI seems to use all over the place.\nAnother big win is adding all your models to the my_models.php file.\nAdd your models to the docs like below</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">*</span> @property your_model                       $your_model</code></pre></div>\n<p>Where the first <code class=\"language-text\">your_model</code> is the model class and the <code class=\"language-text\">$your_model</code> is what’s used in your controllers.</p>\n<p>Bit of a pain to type them all in but should provide some long term gain.</p>\n<p>I noticed nothing was really working in the models. i.e <code class=\"language-text\">db</code> was showing up as undefined.\nThe definition for db was in the CI<em>phpStorm.php file in the docs for CI</em>Model.\nI did notice PHPStorm was complaining about multiple definitions for CI_Model though.\nLooking at the Models there’s this little nugget</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">class_exists</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CI_Model'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CI_Model</span> extends <span class=\"token class-name\">Model</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Which PHPStorm finds and uses instead of the one with the documentation for autocomplete.\nSo it turns out the really old legacy code is an upgrade of a really really old code base… nice.\nAnyway things are for sure on CI 2 now so removing the above line everywhere gets autocomplete back working in models.</p>\n<p>Next I was getting errors in the controllers for the ‘data’ variable.\nI think this is a super global? I can’t see where it’s set up I guess it mightn’t be actually set up just used which sets it up?  Can’t say I like it\nAnyway it’s used in the code like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'page_name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Welcome'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>To get the error to go away add the following to the doc in CI_phpstorm.php</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token operator\">*</span> <span class=\"token variable\">@property</span> array <span class=\"token variable\">$data</span>                          <span class=\"token constant\">Super</span> global array <span class=\"token keyword\">for</span> user data</code></pre></div>\n<p>That gets you a good bit of the way there.\nI’m not sure what version of CI the help files are based on but they are old enough so you may find ‘newer’ code doesn’t autocomplete or shows up as undefined. Hopefully most can be fixed by simply providing the document hint like above. The database hint seem a bit more complex but I assume you can keep adding as you go and build up a full set.\nOr convince people to move off to something from the brave new world…</p>","frontmatter":{"title":"PHPStorm and Codeigniter","date":"April 07, 2016"}}},"pageContext":{"slug":"/2016-04-07-phpstorm-and-codeigniter/","previous":{"fields":{"slug":"/2016-04-07-docker-tying-a-php-server-and-mysql-server-together-for-development/"},"frontmatter":{"title":"Docker tying a php server and mysql server together for development"}},"next":{"fields":{"slug":"/2016-04-11-getting-php-composer-working-for-a-legacy-project/"},"frontmatter":{"title":"Getting PHP Composer working for a legacy project"}}}}