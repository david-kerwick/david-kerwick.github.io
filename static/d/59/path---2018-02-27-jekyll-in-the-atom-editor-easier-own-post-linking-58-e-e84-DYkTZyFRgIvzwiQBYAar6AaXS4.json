{"data":{"site":{"siteMetadata":{"title":"Random Stuff About Stuff","author":"David Kerwick"}},"markdownRemark":{"id":"dc5192b7-f4e8-5b91-adc4-1268b4086e07","excerpt":"Having built up a few posts the number of times I want to link back to one of\nthem is starting to increase. So I’d like a faster way of doing that. Main thing…","html":"<p>Having built up a few posts the number of times I want to link back to one of\nthem is starting to increase. So I’d like a faster way of doing that.</p>\n<p>Main thing is the post title is transformed and the date added when you publish\nthe post so there’s no easy copy and paste of the post title or the date.\nSo typing it out isn’t that bad but slowish and a bit error prone.</p>\n<p>So first off linking to posts works like this\n<a href=\"https://jekyllrb.com/docs/templates/#linking-to-posts\">https://jekyllrb.com/docs/templates/#linking-to-posts</a></p>\n<p>Without following the link it’s basically this, with the site.baseurl being optional</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[Name of Link]({{ site.baseurl }}{% post_url 2010-07-21-name-of-post %})</code></pre></div>\n<p>First port of call then is to create a snippet, you can use Atom’s welcome guide\nto help with this. Here is what I’ve ended up with</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">'.source.gfm'</span><span class=\"token punctuation\">:</span>\n  'Post Link'<span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">'prefix'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'plink'</span>\n    <span class=\"token key atrule\">'body'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'[${1:here}]({% post_url $2 %})'</span></code></pre></div>\n<p>The slight extra here is using the $ number to say where the cursor ends up. You\ncan then tab between them the first one <code class=\"language-text\">${1:here}</code> says this is where the cursor will\nland first and it has a default of <code class=\"language-text\">here</code> if you press tab it accepts the default\nand moves to $2 position. Or you can type something over the default and press tab.</p>\n<p>That will speed up the initial entry, now it’s on to sorting out the path.</p>\n<p>For this you will need to install ’<a href=\"https://atom.io/packages/autocomplete-paths\">autocomplete-paths</a>’</p>\n<p>Once installed you will need to configure it, it doesn’t have any defaults for markdown that I could see.\nSome useful javascript and other stuff of course.</p>\n<p>Open up Atom’s config file (cmd+shift+p) type in config and select ‘Open Your Config’</p>\n<p>Under the <code class=\"language-text\">&quot;*&quot;:</code> I added</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">\"autocomplete-paths\"</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">scopes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token key atrule\">scopes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"source.gfm\"</span>\n      <span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">prefixes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"post_url \"</span>\n      <span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">extensions</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"markdown\"</span>\n        \"md\"\n      <span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">relative</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n      <span class=\"token key atrule\">replaceOnInsert</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'.markdown?$'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'.md?$'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'^.*_posts\\/'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'^.*_draft\\/'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'^\\.\\/'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span></code></pre></div>\n<p>The parts of the config are\nThe second scopes lists the type of file this rule will apply to, to find out\n(cmd+shift+p) type log cursor scope and it will display the details of the current file. In this case markdown files.\nprefixes are a list of patterns where autocomplete paths will kick in, post_url followed by a space will match our snippet.\nextensions limits the file extensions to look for, in this case we are only linking to other markdown files\nrelative is relative path or not\nreplaceOnInsert this is a list of regex replacements to perform once the file path has been selected, here I’m doing some clean up\nto match what Jekyll wants, removing the extension, removing the start directory such as <code class=\"language-text\">_posts</code>, <code class=\"language-text\">_draft</code> and <code class=\"language-text\">./</code></p>\n<p>It should now be pretty simple to add links to posts finding them by date or title.</p>","frontmatter":{"title":"Jekyll in the Atom Editor easier own post linking","date":"February 27, 2018"}}},"pageContext":{"slug":"/2018-02-27-jekyll-in-the-atom-editor-easier-own-post-linking/","previous":{"fields":{"slug":"/new-mac-install/"},"frontmatter":{"title":"New Mac Install"}},"next":{"fields":{"slug":"/2018-03-13-transfer-itunes-and-iphone-backups-to-new-mac/"},"frontmatter":{"title":"Transfer iTunes and iPhone backups to new Mac"}}}}