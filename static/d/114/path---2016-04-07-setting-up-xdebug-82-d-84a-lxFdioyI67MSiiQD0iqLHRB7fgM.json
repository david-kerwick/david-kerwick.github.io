{"data":{"site":{"siteMetadata":{"title":"Random Stuff About Stuff","author":"David Kerwick"}},"markdownRemark":{"id":"add9730e-4a84-5a23-ad4e-c08b7dbd286a","excerpt":"So as part of my fight with the  white screen of death  I ended up setting up Xdebug which proved very useful.\nInstallation is pretty straight forward actually…","html":"<p>So as part of my fight with the <a href=\"../2016-04-07-php-white-screen-of-death\">white screen of death</a> I ended up setting up Xdebug which proved very useful.\nInstallation is pretty straight forward actually just follow the <a href=\"https://xdebug.org/docs/install\">guide</a></p>\n<p>Quick highlights</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pecl <span class=\"token function\">install</span> xdebug</code></pre></div>\n<p>At the end it will tell you what to add to your <code class=\"language-text\">php.ini</code> file</p>\n<p>For example</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">You should add &quot;zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20131226/xdebug.so&quot; to php.ini</code></pre></div>\n<p>Restart apache and Xdebug should be installed</p>\n<p>Next is setting it up so a client can connect for that you need to add settings for remote debugging so in your <code class=\"language-text\">php.ini</code> add something like the below</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">zend_extension<span class=\"token operator\">=</span>/usr/local/lib/php/extensions/no-debug-non-zts-20131226/xdebug.so\nxdebug.remote_enable<span class=\"token operator\">=</span>true\nxdebug.remote_host<span class=\"token operator\">=</span>192.168.208.95\nxdebug.remote_port<span class=\"token operator\">=</span>9000\nxdebug.remote_autostart<span class=\"token operator\">=</span>1</code></pre></div>\n<p>The <code class=\"language-text\">192.168.208.95</code> is your client machine where you will be running the debug client.</p>\n<p>I then needed a simple client to connect to the debugger I found <a href=\"https://www.bluestatic.org/software/macgdbp/\">MacGDBp</a> which does the job nicely for now.\nSo opening that up, make sure it’s listening on the same port as the php server and going to the site should trigger a debug session and you can step through the code and inspect variables etc…</p>\n<p>Next step is to have this automatically set up in the docker containers I’ve been playing with</p>","frontmatter":{"title":"Setting up Xdebug for PHP","date":"April 07, 2016"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2016-04-07-setting-up-xdebug/","previous":{"fields":{"slug":"/2016-04-07-php-white-screen-of-death/"},"frontmatter":{"title":"PHP White Screen Of Death"}},"next":{"fields":{"slug":"/2016-04-07-creating-a-better-docker-php/"},"frontmatter":{"title":"Creating a better docker php"}}}}