{"data":{"site":{"siteMetadata":{"title":"Random Stuff About Stuff","author":"David Kerwick"}},"markdownRemark":{"id":"bc40144f-001c-542d-916e-498d94be93be","excerpt":"I want to create a startup service for Weblogic on RedHat so that when the machine started all the Weblogic components I wanted would be started. So that’s the…","html":"<p>I want to create a startup service for Weblogic on RedHat so that when the machine started all the Weblogic components I wanted would be started. So that’s the nodemanager, the AdminServer and the servers in the dynamic cluster.  </p>\n<p>What I ended up with was an init.d script and a set of wlst scripts for starting and stopped the various components.  </p>\n<p>First create the init.d script  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> /etc/init.d  \n<span class=\"token function\">vi</span> nodemgr  </code></pre></div>\n<p>Add the following contents</p>\n<div class=\"gatsby-highlight\" data-language=\"bash #!/bin/sh\"><pre class=\"language-bash #!/bin/sh\"><code class=\"language-bash #!/bin/sh\">#  \n# nodemgr Oracle Weblogic service  \n#  \n# chkconfig: 345 85 15  \n# description: Oracle Weblogic service  \n\n### BEGIN INIT INFO  \n# Provides: nodemgr  \n# Required-Start: $network $local_fs  \n# Required-Stop:  \n# Should-Start:  \n# Should-Stop:  \n# Default-Start: 3 4 5  \n# Default-Stop: 0 1 2 6  \n# Short-Description: Oracle Weblogic service.  \n# Description: Starts and stops Oracle Weblogic NodeManager, Adminserver and Cluster.  \n### END INIT INFO  \n\n. /etc/rc.d/init.d/functions  \n\nDOMAIN_HOME=&quot;/home/weblogic/user_projects/domains/my_domain&quot;  \nWLS_HOME=&quot;/home/weblogic/Oracle/Middleware/Oracle_Home&quot;  \nDAEMON_USER=&quot;weblogic&quot;  \nPROCESS_STRING=&quot;^.*${DOMAIN_HOME}.*weblogic.NodeManager.*&quot;  \nLOG=${DOMAIN_HOME}/daemon_nodemanager.log  \n/bin/su ${DAEMON_USER} -c &quot;source ${WLS_HOME}/wlserver/server/bin/setWLSEnv.sh 2&gt;&amp;1 &gt;&gt; ${LOG}&quot;  \n\nPROGRAM=&quot;${DOMAIN_HOME}/bin/startNodeManager.sh&quot;  \nSERVICE_NAME=`/bin/basename $0`  \nLOCKFILE=&quot;/var/lock/subsys/${SERVICE_NAME}&quot;  \n\nRETVAL=0  \n\nwait_for() {  \n res=0  \n COUNTER=0  \n while [ ! ${res} -gt 0 ] &amp;&amp; [ ${COUNTER} -lt 20 ]  \n do  \n res=$(tail -5 &quot;$2&quot; | fgrep -c &quot;$1&quot;)  \n let COUNTER=COUNTER+1  \n sleep 1  \n done  \n if [ ${COUNTER} -ge 20 ]; then  \n echo &quot;Didn&#39;t find $1 within the timeout&quot;  \n else  \n echo &quot;Found $1&quot;  \n fi  \n\n}  \n\nstartAdminServer(){  \n /bin/su ${DAEMON_USER} -c &quot;echo &#39;Starting Weblogic AdminServer on $(date)&#39; | tee -a ${LOG}&quot;  \n /bin/su ${DAEMON_USER} -c &quot;${WLS_HOME}/oracle_common/common/bin/wlst.sh /home/weblogic/user_projects/domains/my_domain/startAdminServer.py 2&gt;&amp;1 | tee -a ${LOG}&quot;  \n export -f wait_for  \n /bin/su ${DAEMON_USER} -c &quot;wait_for &#39;Successfully started server AdminServer&#39; &#39;${LOG}&#39;&quot; 2&gt;&amp;1 | tee -a ${LOG}  \n}  \n\nstopAdminServer(){  \n /bin/su ${DAEMON_USER} -c &quot;echo &#39;Stopping Weblogic AdminServer on $(date)&#39; | tee -a ${LOG}&quot;  \n /bin/su ${DAEMON_USER} -c &quot;${WLS_HOME}/oracle_common/common/bin/wlst.sh ${DOMAIN_HOME}/stopAdminServer.py 2&gt;&amp;1 | tee -a ${LOG}&quot;  \n}  \n\nstartCluster(){  \n /bin/su ${DAEMON_USER} -c &quot;echo &#39;Starting Weblogic Cluster on $(date)&#39; | tee -a ${LOG}&quot;  \n /bin/su ${DAEMON_USER} -c &quot;${WLS_HOME}/oracle_common/common/bin/wlst.sh ${DOMAIN_HOME}/startCluster.py 2&gt;&amp;1 | tee -a ${LOG}&quot;  \n}  \n\nstopCluster(){  \n /bin/su ${DAEMON_USER} -c &quot;echo &#39;Stopping Weblogic Cluster on $(date)&#39; | tee -a ${LOG}&quot;  \n /bin/su ${DAEMON_USER} -c &quot;${WLS_HOME}/oracle_common/common/bin/wlst.sh ${DOMAIN_HOME}/stopCluster.py 2&gt;&amp;1 | tee -a ${LOG}&quot;  \n}  \n\nstart() {  \n /bin/su ${DAEMON_USER} -c &quot;echo &#39;Starting all Weblogic on $(date)&#39; | tee -a ${LOG}&quot;  \n OLDPID=`/usr/bin/pgrep -f ${PROCESS_STRING}`  \n if [ ! -z &quot;$OLDPID&quot; ]; then  \n /bin/su ${DAEMON_USER} -c &quot;echo &#39;${SERVICE_NAME} is already running (pid ${OLDPID}) !&#39; | tee -a ${LOG}&quot;  \n exit  \n fi  \n /bin/su ${DAEMON_USER} -c &quot;echo -n &#39;Starting ${SERVICE_NAME}: &#39; | tee -a ${LOG}&quot;  \n /bin/su ${DAEMON_USER} -c &quot;${PROGRAM} 2&gt;&amp;1 | tee -a $LOG &amp;&quot;  \n export -f wait_for  \n /bin/su ${DAEMON_USER} -c &quot;wait_for &#39;Plain socket listener started on port 5556&#39; &#39;${LOG}&#39;&quot; 2&gt;&amp;1 | tee -a ${LOG}  \n #store the error code of the last command  \n RETVAL=$?  \n startAdminServer  \n startCluster   \n#if the return value is success touch the lock file  \n echo  \n [ ${RETVAL} -eq 0 ] &amp;&amp; touch ${LOCKFILE}  \n return ${RETVAL}  \n}  \n\nstop() {  \n\n stopCluster  \n stopAdminServer  \n echo -n &quot;Stopping ${SERVICE_NAME}: &quot;  \n\n OLDPID=`/usr/bin/pgrep -f ${PROCESS_STRING}`  \n if [ &quot;$OLDPID&quot; != &quot;&quot; ]; then  \n /bin/kill -TERM ${OLDPID}  \n else  \n /bin/echo &quot;${SERVICE_NAME} is stopped&quot;  \n fi  \n RETVAL=$?  \n echo  \n [ ${RETVAL} -eq 0 ] &amp;&amp; rm -f ${LOCKFILE}  \n return ${RETVAL}  \n\n}  \n\nrestart() {  \n stop  \n sleep 10  \n start  \n}  \n\ncase &quot;$1&quot; in  \n start)  \n start &amp;  \n ;;  \n stop)  \n stop &amp;  \n ;;  \n restart|force-reload|reload)  \n restart &amp;  \n ;;  \n condrestart|try-restart)  \n [ -f ${LOCKFILE} ] &amp;&amp; restart  \n ;;  \n status)  \n OLDPID=`/usr/bin/pgrep -f ${PROCESS_STRING}`  \n if [ &quot;${OLDPID}&quot; != &quot;&quot; ]; then  \n /bin/echo &quot;${SERVICE_NAME} is running (pid: ${OLDPID})&quot;  \n else  \n /bin/echo &quot;${SERVICE_NAME} is stopped&quot;  \n fi  \n RETVAL=$?  \n ;;  \n startAdminServer)  \n startAdminServer &amp;  \n ;;  \n stopAdminServer)  \n stopAdminServer &amp;  \n ;;  \n startCluster)  \n startCluster &amp;  \n ;;  \n stopCluster)  \n stopCluster &amp;  \n ;;  \n *)  \n echo $&quot;Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart|startAdminServer|stopAdminServer|startCluster|stopCluster}&quot;  \n exit 1  \nesac  \n\nexit ${RETVAL}  </code></pre></div>\n<p>You need to make the script executable  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> +x nodemgr  </code></pre></div>\n<p>And you need it to run on startup  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">chkconfig</span> nodemgr on  </code></pre></div>\n<p>This references several scripts that are place in the domain home which in this case is  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">/home/weblogic/user_projects/domains/my_domain</code></pre></div>\n<p>The scripts are  </p>\n<p>startAdminServer.py  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token keyword\">:</span>   \nfrom wlstModule <span class=\"token function\">import</span> *   \n\nnmConnect<span class=\"token punctuation\">(</span>userConfigFile<span class=\"token operator\">=</span><span class=\"token string\">'/home/weblogic/user_projects/domains/my_domain/nodemanagerConfig.secure'</span>, userKeyFile<span class=\"token operator\">=</span><span class=\"token string\">'/home/weblogic/user_projects/domains/my_domain/nodemanagerKey.secure'</span>, host<span class=\"token operator\">=</span><span class=\"token string\">'myhost.mydomain.ie'</span>, port<span class=\"token operator\">=</span><span class=\"token string\">'5556'</span>, domainName<span class=\"token operator\">=</span><span class=\"token string\">'my_domain'</span>, domainDir<span class=\"token operator\">=</span><span class=\"token string\">'/home/weblogic/user_projects/domains/my_domain/'</span>, nmType<span class=\"token operator\">=</span><span class=\"token string\">'plain'</span><span class=\"token punctuation\">)</span>  \n\nnmStart<span class=\"token punctuation\">(</span><span class=\"token string\">'AdminServer'</span><span class=\"token punctuation\">)</span>   \n\nexit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </code></pre></div>\n<p>stopAdminServer.py  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token keyword\">:</span>   \nfrom wlstModule <span class=\"token function\">import</span> *   \n\ntry:   \nconnect<span class=\"token punctuation\">(</span>userConfigFile<span class=\"token operator\">=</span><span class=\"token string\">'/home/weblogic/user_projects/domains/my_domain/adminServerConfig.secure'</span>, userKeyFile<span class=\"token operator\">=</span><span class=\"token string\">'/home/weblogic/user_projects/domains/my_domain/adminServerKey.secure'</span>, url<span class=\"token operator\">=</span><span class=\"token string\">'t3://myhost.mydomain.ie:7001'</span><span class=\"token punctuation\">)</span>  \n shutdown<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  \n disconnect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  \nexcept WLSTException,e:  \n print <span class=\"token string\">'Could not shutdown admin server, attempting to kill it'</span>  \n nmConnect<span class=\"token punctuation\">(</span>userConfigFile<span class=\"token operator\">=</span><span class=\"token string\">'/home/weblogic/user_projects/domains/my_domain/nodemanagerConfig.secure'</span>, userKeyFile<span class=\"token operator\">=</span><span class=\"token string\">'/home/weblogic/user_projects/domains/my_domain/nodemanagerKey.secure'</span>, host<span class=\"token operator\">=</span><span class=\"token string\">'myhost.mydomain.ie'</span>, port<span class=\"token operator\">=</span><span class=\"token string\">'5556'</span>, domainName<span class=\"token operator\">=</span><span class=\"token string\">'my_domain'</span>, domainDir<span class=\"token operator\">=</span><span class=\"token string\">'/home/weblogic/user_projects/domains/my_domain/'</span>, nmType<span class=\"token operator\">=</span><span class=\"token string\">'plain'</span><span class=\"token punctuation\">)</span>  \n nmKill<span class=\"token punctuation\">(</span><span class=\"token string\">'AdminServer'</span><span class=\"token punctuation\">)</span>  \n disconnect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  \n\nexit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </code></pre></div>\n<p>startCluster.py  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token keyword\">:</span>   \nfrom wlstModule <span class=\"token function\">import</span> *  \n\nconnect<span class=\"token punctuation\">(</span>userConfigFile<span class=\"token operator\">=</span><span class=\"token string\">'/home/weblogic/user_projects/domains/my_domain/adminServerConfig.secure'</span>, userKeyFile<span class=\"token operator\">=</span><span class=\"token string\">'/home/weblogic/user_projects/domains/my_domain/adminServerKey.secure'</span>, url<span class=\"token operator\">=</span><span class=\"token string\">'t3://myhost.mydomain.ie:7001'</span><span class=\"token punctuation\">)</span>  \n\nstart<span class=\"token punctuation\">(</span><span class=\"token string\">'my-cluster'</span>, <span class=\"token string\">'Cluster'</span><span class=\"token punctuation\">)</span>  \n\nexit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </code></pre></div>\n<p>stopCluster.py  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token keyword\">:</span>   \nfrom wlstModule <span class=\"token function\">import</span> *  \n\nconnect<span class=\"token punctuation\">(</span>userConfigFile<span class=\"token operator\">=</span><span class=\"token string\">'/home/weblogic/user_projects/domains/my_domain/adminServerConfig.secure'</span>, userKeyFile<span class=\"token operator\">=</span><span class=\"token string\">'/home/weblogic/user_projects/domains/my_domain/adminServerKey.secure'</span>, url<span class=\"token operator\">=</span><span class=\"token string\">'t3://myhost.mydomain.ie:7001'</span><span class=\"token punctuation\">)</span>  \n\nshutdown<span class=\"token punctuation\">(</span><span class=\"token string\">'my-cluster'</span>, <span class=\"token string\">'Cluster'</span><span class=\"token punctuation\">)</span>  \n\nexit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </code></pre></div>","frontmatter":{"title":"Weblogic startup service for RedHat","date":"April 03, 2014"}}},"pageContext":{"slug":"/2014-04-03-weblogic-startup-service-for-redhat/","previous":{"fields":{"slug":"/2014-04-03-bash-scripting-square-brackets-and/"},"frontmatter":{"title":"Bash scripting square brackets and ampersands "}},"next":{"fields":{"slug":"/2014-04-07-problem-with-cmo-object-in-wlst-script/"},"frontmatter":{"title":"Problem with cmo object in wlst script"}}}}