{"data":{"site":{"siteMetadata":{"title":"Random Stuff About Stuff","author":"David Kerwick"}},"markdownRemark":{"id":"c63aebd3-029a-5a1e-b070-a7865a44fe4a","excerpt":"If you run a few Weblogic dev server installs like the ones set up with the scripts in other parts of this blog, or just dev servers in general there’s a good…","html":"<p>If you run a few Weblogic dev server installs like the ones set up with the scripts in other parts of this blog, or just dev servers in general there’s a good chance there’s old and useless log files you can get rid of. Mainly because they cause clutter and make it harder to find what you are actually looking for.  </p>\n<p>The find command with it’s set of magic arguments will be your friend in this case.  </p>\n<p>So lets layer this up  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> /your/log/dir  </code></pre></div>\n<p>Will return all files and directories in and under your log directory, which is probably too much  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> /your/log/dir -maxdepth 1</code></pre></div>\n<p>Will keep the depth to just your log directory  </p>\n<p>We are only interested in files not directories  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> /your/log/dir -maxdepth 1 -type f</code></pre></div>\n<p>Will restrict find to just files.  </p>\n<p>Now we don’t want all just the older ones  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">find/your/log/dir -maxdepth 1 -type f -mtime +7</code></pre></div>\n<p>Will list files modified over 7 days ago  </p>\n<p>Then to restrict to you certain log files, for example I have my weblogic access logs set up as <code class=\"language-text\">${serverName}_access_%yyyy%_%MM%_%dd%_%hhmm%.log</code><br>\nSo I can find just them using  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> /your/log/dir -maxdepth 1 -type f -mtime +7 -regex  <span class=\"token string\">\".*access_[0-9]+_[0-9]+_[0-9]+_[0-9]+\\.log\"</span></code></pre></div>\n<p>Once you are happy that is is finding the files you want to get rid of it’s time to start deleting.  It’s best to get the find itself right first because if you go directly to the deleting you might end up taking too much.  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> /your/log/dir -maxdepth 1 -type f -mtime +7 -regex <span class=\"token string\">\".*access_[0-9]+_[0-9]+_[0-9]+_[0-9]+\\.log\"</span> -exec <span class=\"token function\">rm</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> \\<span class=\"token punctuation\">;</span></code></pre></div>\n<p>-exec runs the command you specify, in this case rm, {} will be replaced with the file find found ; tells exec it’s done.  </p>\n<p>Once you are happy with that it’s handy enough add them to a cron job, having individual lines means you can have different time frames for the different logs  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Remove old log files  </span>\n<span class=\"token comment\"># Remove access logs  </span>\n30 01 * * * <span class=\"token function\">find</span> /your/log/dir -maxdepth 1 -type f -mtime +7 -regex <span class=\"token string\">\".*access_[0-9]+_[0-9]+_[0-9]+_[0-9]+\\.log\"</span> -exec <span class=\"token function\">rm</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> \\<span class=\"token punctuation\">;</span>  \n<span class=\"token comment\"># Remove server logs  </span>\n30 01 * * * <span class=\"token function\">find</span> /your/log/dir -maxdepth 1 -type f -mtime +7 -regex <span class=\"token string\">\".*_[0-9]+_[0-9]+_[0-9]+_[0-9]+\\.log\"</span> -exec <span class=\"token function\">rm</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> \\<span class=\"token punctuation\">;</span>  \n<span class=\"token comment\"># Remove application logs  </span>\n30 01 * * * <span class=\"token function\">find</span> /your/log/dir -maxdepth 1 -type f -mtime +7 -regex <span class=\"token string\">\".*.log\\.[0-9]+-[0-9]+-[0-9]+\"</span> -exec <span class=\"token function\">rm</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> \\<span class=\"token punctuation\">;</span>  </code></pre></div>","frontmatter":{"title":"Cron to clean up old log files","date":"April 01, 2014"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2014-04-01-cron-to-clean-up-old-log-files/","previous":{"fields":{"slug":"/2014-03-31-redirect-stdout-and-stderr-of-weblogic/"},"frontmatter":{"title":"Redirect stdout and stderr of Weblogic managed servers"}},"next":{"fields":{"slug":"/2014-04-02-some-nice-tee/"},"frontmatter":{"title":"Some nice tee"}}}}