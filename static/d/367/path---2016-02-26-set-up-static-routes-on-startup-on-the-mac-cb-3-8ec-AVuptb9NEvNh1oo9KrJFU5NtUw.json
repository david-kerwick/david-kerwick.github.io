{"data":{"site":{"siteMetadata":{"title":"Random Stuff About Stuff","author":"David Kerwick"}},"markdownRemark":{"id":"8262bc08-024b-5df6-8510-0116abb74025","excerpt":"I needed to add some static routes to only one interface on my Mac.  One route for ethernet and then default to wireless. To do it go to the directory Create aâ€¦","html":"<p>I needed to add some static routes to only one interface on my Mac.  One route for ethernet and then default to wireless.</p>\n<p>To do it go to the directory</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> /Library/LaunchDaemons</code></pre></div>\n<p>Create a plist file here that will run a script at launch to setup our custom route</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> local.static.routes.plist</code></pre></div>\n<p>And this to the plist file</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token doctype\">&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plist</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dict</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>Label<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>local.static.routes<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>Program<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>/usr/local/bin/static<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>RunAtLoad<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>true</span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>StandardErrorPath<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>/Users/David/mycommand.err<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>key</span><span class=\"token punctuation\">></span></span>StandardOutPath<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>key</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span>/Users/David/mycommand.out<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>string</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dict</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plist</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>This will run the script at the given location at startup, it also sets up some logging</p>\n<p>You now need to create the script for doing the routes\nSo whatever location makes sense</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> /usr/local/bin/</code></pre></div>\n<p>works for me.</p>\n<p>Create the script</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> static</code></pre></div>\n<p>Then add </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token comment\"># max number of retries</span>\nretries<span class=\"token operator\">=</span>10\n<span class=\"token keyword\">echo</span> <span class=\"token string\">\"Starting the script\"</span>\n<span class=\"token comment\"># include Startup commons</span>\n<span class=\"token keyword\">.</span> /etc/rc.common\n\n<span class=\"token comment\"># wait for network to become available</span>\nCheckForNetwork\n<span class=\"token keyword\">echo</span> <span class=\"token string\">\"Net status <span class=\"token variable\">$NETWORKUP</span>\"</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string\">\"Check for network\"</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$NETWORKUP</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"-YES-\"</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">do</span>\n       <span class=\"token keyword\">echo</span> <span class=\"token string\">\"Net status <span class=\"token variable\">$NETWORKUP</span>\"</span>\n        retries<span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$((</span>retries <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token variable\">))</span></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$retries</span> -le 0 <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n                <span class=\"token keyword\">exit</span> 1\n        <span class=\"token keyword\">fi</span>\n        <span class=\"token function\">sleep</span> 2\n        NETWORKUP<span class=\"token operator\">=</span>\n        CheckForNetwork\n<span class=\"token keyword\">done</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token string\">\"Trying to set the network\"</span>\nnetworksetup -setadditionalroutes <span class=\"token string\">\"Thunderbolt Ethernet\"</span> 192.168.210.0  255.255.255.0  192.168.208.1 192.168.215.0  255.255.255.0  192.168.208.1 192.168.216.0  255.255.255.0  192.168.208.1 192.168.217.0  255.255.255.0  192.168.208.1 192.100.200.0  255.255.255.0  192.168.208.1  192.168.230.0  255.255.255.0  192.168.208.1\n<span class=\"token keyword\">exit</span> 0</code></pre></div>\n<p>This uses the networksetup command to set the routes on a particular interface.\nthe definition for the method is</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">-setadditionalroutes networkservice <span class=\"token punctuation\">[</span>dest1 mask1 gate1<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>dest2 mask2 gate2<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">..</span>. <span class=\"token punctuation\">[</span>destN maskN gateN<span class=\"token punctuation\">]</span>\n             Use this <span class=\"token function\">command</span> to <span class=\"token keyword\">set</span> the list of IPv4 additional routes configured <span class=\"token keyword\">for</span> the service. Each route is specified as a <span class=\"token punctuation\">(</span>destination address, subnet mask,\n             gateway address<span class=\"token punctuation\">)</span> tuple. Specifying no tuples clears the list of routes.</code></pre></div>\n<p>Lots of tuples can be fun so beware the copy and paste demon.</p>\n<p>That should be it, set the routes up as you need them.</p>","frontmatter":{"title":"Set up static routes on startup on the mac","date":"February 26, 2016"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2016-02-26-set-up-static-routes-on-startup-on-the-mac/","previous":{"fields":{"slug":"/2016-02-05-svn-remove-all-the-locks-in-a-directory/"},"frontmatter":{"title":"SVN remove all the locks in a directory"}},"next":{"fields":{"slug":"/2016-03-15-adding-spell-check-to-sublime-3/"},"frontmatter":{"title":"Adding spell check to Sublime 3"}}}}