{"data":{"site":{"siteMetadata":{"title":"Random Stuff About Stuff","author":"David Kerwick"}},"markdownRemark":{"id":"0004d54c-09b9-5665-9c54-5285e34624e1","excerpt":"Using Spring Boot for a while you get used to not having a   but every now and again you want to do something and all you can find is how to do it in web.xml…","html":"<p>Using Spring Boot for a while you get used to not having a <code class=\"language-text\">web.xml</code> but every now and again you want to do something and all you can find is how to do it in web.xml.</p>\n<p>One such thing I needed to do was to customise a servlet filter, I needed to change it’s dispatcher settings.</p>\n<p>So in web.xml it looks like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;filter-mapping&gt;\n    &lt;filter-name&gt;sitemesh&lt;/filter-name&gt;  \n    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;   \n    &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;    \n    &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;\n    &lt;dispatcher&gt;ERROR&lt;/dispatcher&gt;\n&lt;/filter-mapping&gt;</code></pre></div>\n<p>It took me longer than I liked to find the solution to that so wanted to write it down.</p>\n<p>Basically you use <code class=\"language-text\">FilterRegistrationBean</code></p>\n<p>So in Spring Boot I first had.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">@Bean\npublic Filter siteMeshFilter() {\n    return new SiteMeshFilter();\n}</code></pre></div>\n<p>You can change it to</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">@Bean\npublic FilterRegistrationBean siteMeshFilter() {\n    FilterRegistrationBean registration = new FilterRegistrationBean();\n    registration.setFilter(new SiteMeshFilter());\n    registration.setEnabled(true);\n    registration.addUrlPatterns(&quot;/*&quot;);\n    registration.setOrder(1);\n    registration.setDispatcherTypes(DispatcherType.ERROR, DispatcherType.FORWARD, DispatcherType.REQUEST);\n    return registration;\n}</code></pre></div>\n<p>To get access to all the other good stuff from filter-mapping.</p>\n<p>It didn’t solve my sitemesh not decorating error pages of course, but I had to go down this rabbit hole first.</p>","frontmatter":{"title":"Spring Boot filter-mapping in Java Config","date":"August 08, 2017"}}},"pageContext":{"slug":"/2017-08-08-spring-boot-filter-mapping-in-java-config/","previous":{"fields":{"slug":"/2017-08-08-colouring-spring-test-output-in-maven/"},"frontmatter":{"title":"Colouring Spring Test output in maven"}},"next":{"fields":{"slug":"/2017-10-03-error-on-weblogic-deploying-spring-boot-unable-to-access-the-selected-application/"},"frontmatter":{"title":"Error on Weblogic deploying Spring Boot Unable to access the selected application"}}}}