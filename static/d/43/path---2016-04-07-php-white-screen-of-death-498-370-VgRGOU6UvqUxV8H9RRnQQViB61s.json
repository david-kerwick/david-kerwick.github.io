{"data":{"site":{"siteMetadata":{"title":"Random Stuff About Stuff","author":"David Kerwick"}},"markdownRemark":{"id":"e740798f-1063-5320-b3a8-0041a2ded2f2","excerpt":"What’s with php and it’s refusal to log anything useful?\nSo I’ve been playing with Docker to set up a dev environment for php, all was going well until it came…","html":"<p>What’s with php and it’s refusal to log anything useful?\nSo I’ve been playing with Docker to set up a dev environment for php, all was going well until it came to adding mysql into the mix.\nI had reckoned that connecting the two dockers was going to be fun as I hadn’t done it before and therefore there would be several problems along the way.\nI wasn’t banking on php not telling me what any of those problems were. So I know there’s some problems with the database set up. But is it is a driver problem, can it contact it, wrong username? well keep guessing Mr Developer because all I’m going to show you is a white screen.\nWhich is fine I thought initially, the error logs will be full of information. Err no, they contained nothing.</p>\n<p>So this post is documenting my futile attempt to get php to tell me what it’s moaning about.\nQuick tip, give up now. Start sorting out the connection yourself from first principles, pinging, setting up the mysql client, connecting etc… PHP will be no help in telling you what’s gone wrong. Oh Java I miss your verbose logs.</p>\n<p>So quick disclaimer it may not be all PHP’s fault as I am using Codeigniter but logging when something goes fundamentally wrong should be standard and on by default in my opinion.</p>\n<h1>Turn on php logging.</h1>\n<p>Simple right? Holy world of options Batman.</p>\n<p>For starters there’s nothing in the apache logs. The docker image sends the logs to standard out and all I see there is the access log saying http 200 for index.php i.e. it served out the blank page.</p>\n<p>Next step</p>\n<p>Turn on the logging in index.php</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ini_set<span class=\"token punctuation\">(</span><span class=\"token string\">'display_errors'</span>, 1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \nini_set<span class=\"token punctuation\">(</span><span class=\"token string\">'log_errors'</span>, 1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \nini_set<span class=\"token punctuation\">(</span><span class=\"token string\">'error_log'</span>, <span class=\"token string\">'/var/www/html/error_log.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t\t\nerror_reporting<span class=\"token punctuation\">(</span>-1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Make sure the file is writable.</p>\n<p>It shows me nothing some random stuff about the fact that using error_log() the timezone is unreliable.</p>\n<p>Try php.ini</p>\n<p>Next I tried setting a custom php.ini file</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">display_startup_errors <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\ndisplay_errors <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\nhtml_errors <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\nlog_errors <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\nignore_repeated_errors <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\nignore_repeated_source <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\nreport_memleaks <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\ntrack_errors <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\ndocref_root <span class=\"token operator\">=</span> 0\ndocref_ext <span class=\"token operator\">=</span> 0\nerror_log <span class=\"token operator\">=</span> /var/www/html/an_error.log\nerror_reporting <span class=\"token operator\">=</span> -1 \nlog_errors_max_len <span class=\"token operator\">=</span> 0</code></pre></div>\n<p>Showed me nothing at all</p>\n<p>I then tried adding settings to the .htaccess file</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">php_value error_log /var/www/html/PHP_errors.log\nphp_flag display_startup_errors on\nphp_flag display_errors on\nphp_flag html_errors on\nphp_value error_reporting -1\nphp_flag log_errors on</code></pre></div>\n<p>Again nothing</p>\n<p>I then tried setting Codeigniters settings in the <code class=\"language-text\">application/config/config.php</code> file find and set the below</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#Set the logging to everything</span>\n<span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token string\">'log_threshold'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> 4<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#Set a path make sure it's writable</span>\n<span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token string\">'log_path'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'/var/www/html/'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Again nothing of use. Seems to say everything is fine, I’ve actually not started the database so know it can’t connect.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">DEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Config Class Initialized\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Hooks Class Initialized\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Utf8 Class Initialized\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> UTF-8 Support Enabled\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> URI Class Initialized\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Router Class Initialized\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> No URI present. Default controller set.\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Output Class Initialized\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Security Class Initialized\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Input Class Initialized\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Global POST and COOKIE data sanitized\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Language Class Initialized\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Loader Class Initialized\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Helper loaded: url_helper\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Helper loaded: form_helper\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Helper loaded: extra_functions_helper\nDEBUG - 2016-03-20 13:01:11 --<span class=\"token operator\">></span> Database Driver Class Initialized</code></pre></div>\n<p>Throw me a bone here there’s no database at least log that somewhere!</p>\n<p>Right, off to <code class=\"language-text\">application/config/database.php</code> make sure database debugging is on</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token variable\">$db</span><span class=\"token punctuation\">[</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'db_debug'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nothing</p>\n<p>So starting to run out of options so I installed Xdebug and started stepping through.\nSo it’s obviously where it connects to the database.\nAnd that’s in <code class=\"language-text\">system/database/drivers/mysql/mysql_driver.php</code></p>\n<p>There are two functions there db<em>connect and db</em>pconnect\nAnd the line</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">return</span> @mysql_pconnect<span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span>-<span class=\"token operator\">></span>hostname, <span class=\"token variable\">$this</span>-<span class=\"token operator\">></span>username, <span class=\"token variable\">$this</span>-<span class=\"token operator\">></span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>So the @ symbol looked odd and I had to look it up (I’m new to PHP) it <a href=\"http://php.net/manual/en/language.operators.errorcontrol.php\">suppresses errors</a>… and that’s there on purpose… and problem with the database and the framework hides it… because? Reasons?</p>\n<p>So removing that and you will actually get an error, oh happy days.\nSo it’s been CI all along.\nI guess I’ve been spoiled by Java’s rather verbose logging, if it was up to me I’d ditch CI right now.  Something that hides a fatal error on purpose… I just don’t get it.\nIt may generate warnings? But surely that can be handled by log filtering, or a conditional that checks if the user wants to see fatal errors.</p>","frontmatter":{"title":"PHP White Screen Of Death","date":"April 07, 2016"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2016-04-07-php-white-screen-of-death/","previous":{"fields":{"slug":"/2016-04-06-docker-dangling-volumes/"},"frontmatter":{"title":"Docker Dangling Volumes"}},"next":{"fields":{"slug":"/2016-04-07-setting-up-xdebug/"},"frontmatter":{"title":"Setting up Xdebug for PHP"}}}}