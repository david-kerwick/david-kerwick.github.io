{"data":{"site":{"siteMetadata":{"title":"Random Stuff About Stuff","author":"David Kerwick"}},"markdownRemark":{"id":"cfe42c29-95f8-57d0-816b-9a9429af876d","excerpt":"Installing Weblogic 12c. Some preample, I created a 64bit Redhat 6.5 virtual machine using VirtualBox.  Just followed the default install. Create a weblogic…","html":"<h2>Installing Weblogic 12c.</h2>\n<p>Some preample, I created a 64bit Redhat 6.5 virtual machine using VirtualBox.  Just followed the default install.</p>\n<h3>Create a weblogic user</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">adduser -m weblogic   </code></pre></div>\n<p>*the -m will create the home directory are well.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">passwd</span> weblogic  \nChanging password <span class=\"token keyword\">for</span> user weblogic.  \nNew password:  \nRetype new password:  \npasswd: all authentication tokens updated successfully.  </code></pre></div>\n<h3>Install Java</h3>\n<p>Get the rpm installer from <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">here</a></p>\n<p>I downloaded jdk-7u51-linux-x64.rpm.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">rpm -ivh jdk-7u51-linux-x64.rpm  </code></pre></div>\n<p>-i install\n-v verbose output\n-h hash tag to show progress</p>\n<h3>Download Weblogic</h3>\n<p>Download the latest Weblogic generic installer from <a href=\"http://www.oracle.com/technetwork/middleware/weblogic/downloads/index.html\">here</a></p>\n<p>I downloaded the generic installer for 12.1.2.</p>\n<p>Copy the weblogic_1211200.jar to the weblogic home directory for now.</p>\n<h3>Install Weblogic</h3>\n<p>So even though it says <a href=\"https://blogs.oracle.com/WeblogicConfigurations/entry/how_to_install_oracle_weblogic2\">here</a> that you can install with console mode when you try  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">java -jar wls_121200.jar -mode<span class=\"token operator\">=</span>console  </code></pre></div>\n<p>You get the lovely dump below, seems to want a display regardless of the fact you have asked for console mode</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Extracting files<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>  \nStarting Oracle Universal Installer  \n\nChecking <span class=\"token keyword\">if</span> CPU speed is above 300 MHz.   Actual 2951.164 MHz    Passed  \nChecking monitor: must be configured to display at least 256 colors.  DISPLAY environment variable not set.    Failed <span class=\"token operator\">&lt;&lt;&lt;</span><span class=\"token operator\">&lt;</span>  \nChecking swap space: must be greater than 512 MB.   Actual 1675256 MB    Passed  \nChecking <span class=\"token keyword\">if</span> this platform requires a 64-bit JVM.   Actual 64    Passed <span class=\"token punctuation\">(</span>64-bit not required<span class=\"token punctuation\">)</span>  \nChecking temp space: must be greater than 300 MB.   Actual 8817 MB    Passed  \n\nSome requirement checks failed.  \nYou must fulfill these requirements before continuing with the installation.  \n\nContinue? <span class=\"token punctuation\">(</span>y/n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span>   \ny  \nYou have confirmed that the product can be installed on this platform.  \nContinuing with the install.  \n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> Ignoring required prerequisite failures.  Continuing<span class=\"token punctuation\">..</span>.  \nPreparing to launch the Oracle Universal Installer from /tmp/OraInstall2014-03-11_08-16-43PM  \nDISPLAY is not set.  Please <span class=\"token keyword\">set</span> the DISPLAY environment variable and try again.  \nDepending on the Unix Shell, you can use one of the following commands as examples to <span class=\"token keyword\">set</span> the DISPLAY environment variable:  \n- For csh:  %% setenv DISPLAY 192.168.1.128:0.0  \n- For sh, ksh and bash: $ DISPLAY<span class=\"token operator\">=</span>192.168.1.128:0.0<span class=\"token punctuation\">;</span> <span class=\"token function\">export</span> DISPLAY  \nUse the following <span class=\"token function\">command</span> to see what shell is being used:  \n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$SHELL</span>  \nUse the following <span class=\"token function\">command</span> to view the current DISPLAY environment variable setting:  \n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$DISPLAY</span>  \n- Make sure that client <span class=\"token function\">users</span> are authorized to connect to the X Server.  \nTo <span class=\"token function\">enable</span> client <span class=\"token function\">users</span> to access the X Server, <span class=\"token function\">open</span> an xterm, dtterm or xconsole as the user that started the session and <span class=\"token function\">type</span> the following command:  \n%% xhost +  \nTo <span class=\"token function\">test</span> that the DISPLAY environment variable is <span class=\"token keyword\">set</span> correctly, run a X11 based program that comes with the native operating system such as <span class=\"token string\">'xclock'</span><span class=\"token keyword\">:</span>  \n%% <span class=\"token operator\">&lt;</span>full below<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> path<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> see<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> to<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> xclock<span class=\"token punctuation\">..</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token operator\">></span>  \nIf you are not able to run xclock successfully, please refer to your PC-X Server or OS vendor <span class=\"token keyword\">for</span> further assistance.  \nTypical path <span class=\"token keyword\">for</span> xclock: /usr/X11R6/bin/xclock  \njava.awt.HeadlessException:   \nNo X11 DISPLAY variable was set, but this program performed an operation <span class=\"token function\">which</span> requires it.  \nat java.awt.GraphicsEnvironment.checkHeadless<span class=\"token punctuation\">(</span>GraphicsEnvironment.java:207<span class=\"token punctuation\">)</span>  \nat java.awt.Window.<span class=\"token operator\">&lt;</span>init<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>Window.java:535<span class=\"token punctuation\">)</span>  \nat java.awt.Frame.<span class=\"token operator\">&lt;</span>init<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>Frame.java:420<span class=\"token punctuation\">)</span>  \nat java.awt.Frame.<span class=\"token operator\">&lt;</span>init<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>Frame.java:385<span class=\"token punctuation\">)</span>  \nat javax.swing.SwingUtilities<span class=\"token variable\">$SharedOwnerFrame</span>.<span class=\"token operator\">&lt;</span>init<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>SwingUtilities.java:1757<span class=\"token punctuation\">)</span>  \nat javax.swing.SwingUtilities.getSharedOwnerFrame<span class=\"token punctuation\">(</span>SwingUtilities.java:1832<span class=\"token punctuation\">)</span>  \nat javax.swing.JDialog.<span class=\"token operator\">&lt;</span>init<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>JDialog.java:271<span class=\"token punctuation\">)</span>  \nat javax.swing.JDialog.<span class=\"token operator\">&lt;</span>init<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>JDialog.java:205<span class=\"token punctuation\">)</span>  \nat javax.swing.JDialog.<span class=\"token operator\">&lt;</span>init<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>JDialog.java:153<span class=\"token punctuation\">)</span>  \nat oracle.as.install.engine.modules.presentation.ui.common.dialogs.SpecifyInventoryDirectoryDialog.<span class=\"token operator\">&lt;</span>init<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>SpecifyInventoryDirectoryDialog.java:237<span class=\"token punctuation\">)</span>  \nat oracle.as.install.engine.modules.presentation.ui.common.dialogs.SpecifyInventoryDirectoryDialog.showDialog<span class=\"token punctuation\">(</span>SpecifyInventoryDirectoryDialog.java:763<span class=\"token punctuation\">)</span>  \nat oracle.sysman.oio.oioc.OiocOneClickInstaller.main<span class=\"token punctuation\">(</span>OiocOneClickInstaller.java:584<span class=\"token punctuation\">)</span>  </code></pre></div>\n<p>So best to log on to the server with a gui present and run</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">java -jar wls_121200.jar  </code></pre></div>\n<p>The set of screens that follow are pretty well detailed <a href=\"http://docs.oracle.com/middleware/1212/core/WLSIG/install_gui.htm#CBBGCJEH%20So%20not%20going%20to%20reproduce%20them.\">here</a></p>\n<p>I skipped the domain creation wizard in favour of creating my own using wlst, which in theory should give me more control between development iterations</p>","frontmatter":{"title":"Installing Weblogic 12c","date":"March 11, 2014"}}},"pageContext":{"slug":"/2014-03-11-installing-weblogic-12c/","previous":{"fields":{"slug":"/2014-02-12-fixed-ip-under-red-hat-65/"},"frontmatter":{"title":"Fixed IP under Red Hat 6.5"}},"next":{"fields":{"slug":"/2014-03-11-syntax-highlighter-remove-lime-green/"},"frontmatter":{"title":"Syntax Highlighter - Remove the lime green help box on blogger"}}}}