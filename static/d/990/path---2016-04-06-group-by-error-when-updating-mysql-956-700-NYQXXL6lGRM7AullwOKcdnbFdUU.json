{"data":{"site":{"siteMetadata":{"title":"Random Stuff About Stuff","author":"David Kerwick"}},"markdownRemark":{"id":"ddeeff92-5bdf-5444-89ba-039674ddf52f","excerpt":"When playing with Docker, php and mysql I ended up using the latest mysql with some old php\nThis caused php to start spewing errors such as So mysql changed the…","html":"<p>When playing with Docker, php and mysql I ended up using the latest mysql with some old php\nThis caused php to start spewing errors such as</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">Expression</span> <span class=\"token comment\">#1 of SELECT list is not in GROUP BY clause and contains </span>\nnonaggregated column <span class=\"token string\">'db.table.column'</span> which is <span class=\"token keyword\">not</span> functionally \ndependent on columns <span class=\"token keyword\">in</span> <span class=\"token constant\">GROUP</span> <span class=\"token constant\">BY</span> clause<span class=\"token punctuation\">;</span> this is incompatible with\nsql_mode<span class=\"token operator\">=</span>only_full_group_by</code></pre></div>\n<p>So mysql changed the default for group by (a while ago it turns out) which means old and I guess incorrectly written group by statements don’t work.  So the long term solution is to fix these statements but for now I just want to get it running like before but using Docker.</p>\n<p>So one option is to use the old version of mysql, something that pre-dates mysql 5.7.5.\nThe other option is to turn off the <code class=\"language-text\">only_full_group_by</code> setting.</p>\n<p>This can be done in a session using </p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SET</span> sql_mode <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Or globally using</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SET</span> <span class=\"token keyword\">GLOBAL</span> sql_mode <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>That turns off all sql modes btw.</p>\n<p>But I’d prefer to have this as part of my docker build which uses the official mysql docker image.\nToo to that I need to add a custom config which will set the sql mode.\nTo find out the current sql modes enabled run</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> @<span class=\"token variable\">@sql_mode</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>So this will list everything enabled including <code class=\"language-text\">only_full_group_by</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</code></pre></div>\n<p>So you can add the sql mode to the existing my.cnf dropping the <code class=\"language-text\">only_full_group_by</code> of course</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>mysqld<span class=\"token punctuation\">]</span>\nsql_mode<span class=\"token operator\">=</span>STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</code></pre></div>\n<p>For a new container in dockerland the official image has an extension point so map your own whatever.cnf into <code class=\"language-text\">/etc/mysql/conf.d</code> as long and it ends in <code class=\"language-text\">.cnf</code> it will be combined into the config</p>","frontmatter":{"title":"Group By error when updating mysql","date":"April 06, 2016"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2016-04-06-group-by-error-when-updating-mysql/","previous":{"fields":{"slug":"/2016-04-06-testing-out-docker-with-mysql/"},"frontmatter":{"title":"Testing out Docker with mysql"}},"next":{"fields":{"slug":"/2016-04-06-creating-a-better-docker-mysql/"},"frontmatter":{"title":"Creating a better Docker mysql"}}}}